/**********************************************************
/* 2012年9月29日 Studio Kura電子工作室ワークショップ
/* ===============================================
/* ここにあるサンプルのプログラムを改造して、
/* 自分の好きなパターンをどうぞ作ってみてください。
**********************************************************/

//まず使いたい変数を定義する
const int PATTERN_SIZE = 16;//パターンのステップの数
byte pattern[PATTERN_SIZE][4] = {
  {1,1,1,1},//4つのLEDがオン
  {0,0,0,0},//4つのLEDがオフ
  {1,1,1,1},//繰り返し（点滅）
  {0,0,0,0},
  {1,1,1,1},
  {0,0,0,0},
  {1,1,1,1},
  {0,0,0,0},
  {1,0,0,0},//LED1だけがオン
  {0,1,0,0},//LED2だけがオン
  {0,0,1,0},//LED3だけがオン
  {0,0,0,1},//LED4だけがオン
  {1,0,0,0},//繰り返し
  {0,1,0,0},
  {0,0,1,0},
  {0,0,0,1},
};
int led1 = 13;//led1という変数に13を保存する
//LED1の(+)をArduinoの13番ピンにつなげましょう
int led2 = 12;//led2という変数に12を保存する
int led3 = 11;//同じく
int led4 = 10;
int period = 200;//パターンのステップの長さ（ミリ秒）
int index = 0;//現在反映されているステップ（0から始まる）

void setup() {//起動時に一度だけ実効される関数
  pinMode(led1, OUTPUT);//LEDをつなげるArduinoのPINを出力と設定する
  pinMode(led2, OUTPUT);//同じく
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
}

void loop() {//setup()が完了してからずっと繰り返しで実行されていく関数
  digitalWrite(led1, pattern[index][0]);//現在のステップのLED1の0か1を反映させる
  digitalWrite(led2, pattern[index][1]);//現在のステップのLED2の0か1を反映させる
  digitalWrite(led3, pattern[index][2]);//同じく
  digitalWrite(led4, pattern[index][3]);
  delay(period);//1ステップの長さだけ、そのまま待つ
  index = index + 1;//次のステップの準備
  if(index >= PATTERN_SIZE){//最後のステップにたどり着いたとき
    index = 0;//また最初から始める
  }
}

